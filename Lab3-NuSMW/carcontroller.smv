MODULE main

-- EXERCISE
-- This is an exercise in model-based test case generation.
-- The idea is to write trap properties that achieve 100% NC 
-- and 100% EC. Then we use NuSMV -bmc to generate test cases satisfying
-- every test requirement. 

-- ACTIVITIES
-- 1. Execute this file as it is with the command NuSMV -bmc.
-- 2. Observe and make sure you understand what you see.
-- 3. Then edit the file to answer the 2 questions below.
-- You should have a final total of 9 test requirements.
-- 4. Execute this file again with the command NuSMV -bmc.
-- 5. Extract and write down the generated test case for each 
-- of your 9 test requirements.


VAR
-- system output
	state : {stop, slow, fast};
IVAR
-- system inputs
	accelerate: boolean;
	brake: boolean;

ASSIGN
	init(state) := stop;
	next(state) := case
		      accelerate & !brake & state = stop : slow;
		      accelerate & !brake & state = slow : fast;
		      !accelerate & !brake & state = fast : slow;
		      !accelerate & !brake & state = slow : stop;
		      brake : stop;
		      TRUE : state;
	esac;

-- Node 1: state=stop
LTLSPEC 
	G( !(state = stop))

-- Node 2: state=slow
LTLSPEC
       G( !(state = slow))

-- Node 3: state=fast
LTLSPEC
       G( !(state = fast))



-- The UML-diagram (misc/carcontroller_UML.png) is linked in the README.md
-- 6 edges labeled A-E will be covered in the following section:

-- Edge A:
LTLSPEC 
	G( state=stop & accelerate -> X( !(state=slow) ) )


-- Edge B:
LTLSPEC
	G( (state=slow & accelerate & !brake) -> X( !(state=fast) ) )


-- Edge C:
LTLSPEC
	G( state=slow & brake -> X( !(state=stop) ) )


-- Edge D:
LTLSPEC
	G( (state=slow & !accelerate & !brake) -> X( !(state=stop) ) )


-- Edge E:
LTLSPEC
	G( (state=fast & !accelerate &!brake) -> X( !(state=slow) ) )


-- Edge F:
LTLSPEC
	G( state=fast & brake -> X( !(state=stop) ) )
